// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ofgem.Database.GBI.Users.Infrastructure;

#nullable disable

namespace Ofgem.Database.GBI.Users.Infrastructure.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20230816095731_AddSuppliersData")]
    partial class AddSuppliersData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ofgem.Database.GBI.Users.Domain.Entities.ExternalUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("ProviderUserId")
                        .IsUnique()
                        .HasFilter("[ProviderUserId] IS NOT NULL");

                    b.HasIndex("SupplierId");

                    b.ToTable("ExternalUsers");
                });

            modelBuilder.Entity("Ofgem.Database.GBI.Users.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "EON"
                        },
                        new
                        {
                            Id = 2,
                            Name = "EDF"
                        },
                        new
                        {
                            Id = 3,
                            Name = "SPW"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SSE"
                        },
                        new
                        {
                            Id = 5,
                            Name = "BGT"
                        },
                        new
                        {
                            Id = 6,
                            Name = "NPW"
                        },
                        new
                        {
                            Id = 7,
                            Name = "FUL"
                        },
                        new
                        {
                            Id = 8,
                            Name = "UTW"
                        },
                        new
                        {
                            Id = 9,
                            Name = "COP"
                        },
                        new
                        {
                            Id = 10,
                            Name = "OVO"
                        },
                        new
                        {
                            Id = 11,
                            Name = "UTA"
                        },
                        new
                        {
                            Id = 12,
                            Name = "XEN"
                        },
                        new
                        {
                            Id = 13,
                            Name = "SPK"
                        },
                        new
                        {
                            Id = 14,
                            Name = "EEN"
                        },
                        new
                        {
                            Id = 15,
                            Name = "FLO"
                        },
                        new
                        {
                            Id = 16,
                            Name = "HUD"
                        },
                        new
                        {
                            Id = 17,
                            Name = "BLB"
                        },
                        new
                        {
                            Id = 18,
                            Name = "OCT"
                        },
                        new
                        {
                            Id = 19,
                            Name = "GNE"
                        },
                        new
                        {
                            Id = 20,
                            Name = "EGE"
                        },
                        new
                        {
                            Id = 21,
                            Name = "AVR"
                        },
                        new
                        {
                            Id = 22,
                            Name = "SHL"
                        },
                        new
                        {
                            Id = 23,
                            Name = "SOE"
                        },
                        new
                        {
                            Id = 24,
                            Name = "RHE"
                        },
                        new
                        {
                            Id = 25,
                            Name = "TNK"
                        },
                        new
                        {
                            Id = 26,
                            Name = "PLA"
                        },
                        new
                        {
                            Id = 27,
                            Name = "ISP"
                        },
                        new
                        {
                            Id = 28,
                            Name = "UPL"
                        },
                        new
                        {
                            Id = 29,
                            Name = "ECY"
                        },
                        new
                        {
                            Id = 30,
                            Name = "BRI"
                        },
                        new
                        {
                            Id = 31,
                            Name = "ESB"
                        },
                        new
                        {
                            Id = 32,
                            Name = "IGL"
                        },
                        new
                        {
                            Id = 33,
                            Name = "TOE"
                        },
                        new
                        {
                            Id = 34,
                            Name = "FOX"
                        },
                        new
                        {
                            Id = 35,
                            Name = "PES"
                        });
                });

            modelBuilder.Entity("Ofgem.Database.GBI.Users.Domain.Entities.ExternalUser", b =>
                {
                    b.HasOne("Ofgem.Database.GBI.Users.Domain.Entities.Supplier", null)
                        .WithMany("ExternalUsers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ofgem.Database.GBI.Users.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("ExternalUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
