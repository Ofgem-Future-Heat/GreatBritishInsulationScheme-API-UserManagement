// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ofgem.Database.GBI.Users.Infrastructure;

#nullable disable

namespace Ofgem.Database.GBI.Users.Infrastructure.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20230818133154_RemoveSeedData")]
    partial class RemoveSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ofgem.Database.GBI.Users.Domain.Entities.ExternalUser", b =>
                {
                    b.Property<Guid>("ExternalUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("ExternalUserId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("ProviderUserId")
                        .IsUnique()
                        .HasFilter("[ProviderUserId] IS NOT NULL");

                    b.HasIndex("SupplierId");

                    b.ToTable("ExternalUsers");
                });

            modelBuilder.Entity("Ofgem.Database.GBI.Users.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SupplierId");

                    b.HasIndex("SupplierName")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Ofgem.Database.GBI.Users.Domain.Entities.ExternalUser", b =>
                {
                    b.HasOne("Ofgem.Database.GBI.Users.Domain.Entities.Supplier", "Supplier")
                        .WithMany("ExternalUsers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Ofgem.Database.GBI.Users.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("ExternalUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
